# Production Environment Template
# Copy this to .env and fill with actual values

# ===============================================
# SECURITY SETTINGS (CRITICAL)
# ===============================================

# Generate with: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
SECRET_KEY=

# Generate with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
FIELD_ENCRYPTION_KEY=

# Generate separate key for JWT: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
JWT_SIGNING_KEY=

# NEVER set to True in production
DEBUG=False

# Your production domains (comma-separated)
ALLOWED_HOSTS=yourdomain.com,www.yourdomain.com

# CORS allowed origins (comma-separated)
CORS_ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# ===============================================
# DATABASE CONFIGURATION
# ===============================================

DB_NAME=finance_management_prod
DB_USER=finance_user
DB_PASSWORD=
DB_HOST=localhost
DB_PORT=5432

# ===============================================
# REDIS CONFIGURATION
# ===============================================

REDIS_URL=redis://localhost:6379/0

# ===============================================
# PLUGGY API CONFIGURATION
# ===============================================

# Get these from your Pluggy dashboard: https://dashboard.pluggy.ai/
# For development/testing use: https://dashboard.sandbox.pluggy.ai/
PLUGGY_CLIENT_ID=
PLUGGY_CLIENT_SECRET=

# Pluggy API base URL
# Production: https://api.pluggy.ai
# Sandbox: https://api.sandbox.pluggy.ai
PLUGGY_BASE_URL=https://api.pluggy.ai

# Pluggy Connect widget URL
# Production: https://connect.pluggy.ai
# Sandbox: https://connect.sandbox.pluggy.ai
PLUGGY_CONNECT_URL=https://connect.pluggy.ai

# Webhook URL for real-time updates (optional)
PLUGGY_WEBHOOK_URL=https://yourdomain.com/api/banking/pluggy/webhook/

# ===============================================
# BELVO API CONFIGURATION (Alternative to Pluggy)
# ===============================================

# Get these from your Belvo dashboard: https://dashboard.belvo.com/
# For development/testing use: https://sandbox.belvo.com/
BELVO_SECRET_ID=
BELVO_SECRET_PASSWORD=

# Belvo API base URL
# Production: https://api.belvo.com
# Sandbox: https://sandbox.belvo.com
BELVO_BASE_URL=https://api.belvo.com

# ===============================================
# AI SERVICES
# ===============================================

# OpenAI API key for transaction categorization
OPENAI_API_KEY=sk-

# ===============================================
# EMAIL CONFIGURATION
# ===============================================

EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_HOST_USER=
EMAIL_HOST_PASSWORD=
DEFAULT_FROM_EMAIL=noreply@yourdomain.com

# ===============================================
# AWS CONFIGURATION (for file storage)
# ===============================================

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_STORAGE_BUCKET_NAME=finance-management-files
AWS_S3_REGION_NAME=us-east-1

# ===============================================
# MONITORING & LOGGING
# ===============================================

# Sentry DSN for error tracking
SENTRY_DSN=

# ===============================================
# LEGACY SETTINGS (deprecated)
# ===============================================

# These are deprecated - use Pluggy instead
# OPEN_BANKING_CLIENT_ID=
# OPEN_BANKING_CLIENT_SECRET=

# ===============================================
# PRODUCTION CHECKLIST
# ===============================================

# Before deploying, ensure:
# 1. All secret keys are randomly generated and secure
# 2. DEBUG=False
# 3. ALLOWED_HOSTS contains only your production domains
# 4. Database is PostgreSQL with proper backups
# 5. Redis is configured with persistence
# 6. SSL certificates are valid and properly configured
# 7. All Open Banking certificates are valid and registered
# 8. CORS origins are restricted to your frontend domains
# 9. AWS credentials have minimal required permissions
# 10. Sentry is configured for error monitoring
# 11. Email service is properly configured
# 12. OpenAI API key has appropriate usage limits