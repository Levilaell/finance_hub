# Generated by Django 5.1.6 on 2025-08-12 01:48

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIConversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Gerado automaticamente ou definido pelo usuário', max_length=200, verbose_name='título')),
                ('status', models.CharField(choices=[('active', 'Ativa'), ('archived', 'Arquivada'), ('deleted', 'Excluída')], default='active', max_length=20, verbose_name='status')),
                ('financial_context', models.JSONField(default=dict, help_text='Snapshot dos dados financeiros', verbose_name='contexto financeiro')),
                ('settings', models.JSONField(default=dict, help_text='Preferências, persona AI, etc', verbose_name='configurações')),
                ('message_count', models.IntegerField(default=0)),
                ('total_credits_used', models.IntegerField(default=0)),
                ('insights_generated', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_conversations', to='companies.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_conversations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Conversation',
                'verbose_name_plural': 'AI Conversations',
                'db_table': 'ai_conversations',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='AICredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.IntegerField(default=0, help_text='Créditos disponíveis atualmente', validators=[django.core.validators.MinValueValidator(0)], verbose_name='saldo atual')),
                ('monthly_allowance', models.IntegerField(default=0, help_text='Créditos inclusos no plano', verbose_name='cota mensal')),
                ('bonus_credits', models.IntegerField(default=0, help_text='Créditos promocionais ou de cortesia', verbose_name='créditos bônus')),
                ('last_reset', models.DateTimeField(default=django.utils.timezone.now, help_text='Data do último reset mensal', verbose_name='último reset')),
                ('total_purchased', models.IntegerField(default=0, help_text='Total de créditos já comprados', verbose_name='total comprado')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_credits', to='companies.company')),
            ],
            options={
                'verbose_name': 'AI Credit',
                'verbose_name_plural': 'AI Credits',
                'db_table': 'ai_credits',
            },
        ),
        migrations.CreateModel(
            name='AIMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('user', 'Usuário'), ('assistant', 'Assistente AI'), ('system', 'Sistema')], max_length=20, verbose_name='papel')),
                ('type', models.CharField(choices=[('text', 'Texto'), ('analysis', 'Análise'), ('report', 'Relatório'), ('chart', 'Gráfico'), ('alert', 'Alerta')], default='text', max_length=20, verbose_name='tipo')),
                ('content', models.TextField(verbose_name='conteúdo')),
                ('credits_used', models.IntegerField(default=0)),
                ('tokens_used', models.IntegerField(default=0)),
                ('model_used', models.CharField(default='gpt-4o-mini', max_length=50, verbose_name='modelo usado')),
                ('structured_data', models.JSONField(blank=True, help_text='Dados para renderizar gráficos, tabelas, etc', null=True, verbose_name='dados estruturados')),
                ('insights', models.JSONField(blank=True, help_text='Insights acionáveis extraídos', null=True, verbose_name='insights')),
                ('helpful', models.BooleanField(blank=True, null=True)),
                ('user_feedback', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='ai_insights.aiconversation')),
            ],
            options={
                'verbose_name': 'AI Message',
                'verbose_name_plural': 'AI Messages',
                'db_table': 'ai_messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('cost_saving', 'Economia de Custos'), ('cash_flow', 'Fluxo de Caixa'), ('anomaly', 'Anomalia Detectada'), ('opportunity', 'Oportunidade'), ('risk', 'Alerta de Risco'), ('trend', 'Tendência'), ('benchmark', 'Comparativo de Mercado'), ('tax', 'Fiscal/Tributário'), ('growth', 'Crescimento')], max_length=20, verbose_name='tipo')),
                ('priority', models.CharField(choices=[('critical', 'Crítico - Ação Imediata'), ('high', 'Alto - Esta Semana'), ('medium', 'Médio - Este Mês'), ('low', 'Baixo - Informativo')], max_length=20, verbose_name='prioridade')),
                ('status', models.CharField(choices=[('new', 'Novo'), ('viewed', 'Visualizado'), ('in_progress', 'Em Andamento'), ('completed', 'Concluído'), ('dismissed', 'Descartado')], default='new', max_length=20, verbose_name='status')),
                ('title', models.CharField(max_length=200, verbose_name='título')),
                ('description', models.TextField(verbose_name='descrição')),
                ('action_items', models.JSONField(default=list, help_text='Lista de ações recomendadas', verbose_name='ações sugeridas')),
                ('data_context', models.JSONField(default=dict, help_text='Dados que geraram o insight', verbose_name='contexto de dados')),
                ('potential_impact', models.DecimalField(blank=True, decimal_places=2, help_text='Valor estimado em R$', max_digits=12, null=True, verbose_name='impacto potencial')),
                ('impact_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='% de impacto no resultado', max_digits=5, null=True, verbose_name='impacto percentual')),
                ('is_automated', models.BooleanField(default=False, verbose_name='gerado automaticamente')),
                ('action_taken', models.BooleanField(default=False)),
                ('action_taken_at', models.DateTimeField(blank=True, null=True)),
                ('actual_impact', models.DecimalField(blank=True, decimal_places=2, help_text='Valor real economizado/ganho', max_digits=12, null=True, verbose_name='impacto real')),
                ('user_feedback', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('viewed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Quando o insight não é mais relevante', null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_insights', to='companies.company')),
                ('conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_insights', to='ai_insights.aiconversation')),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_insights', to='ai_insights.aimessage')),
            ],
            options={
                'verbose_name': 'AI Insight',
                'verbose_name_plural': 'AI Insights',
                'db_table': 'ai_insights',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AICreditTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('monthly_reset', 'Reset Mensal'), ('purchase', 'Compra Avulsa'), ('bonus', 'Bônus'), ('usage', 'Uso'), ('refund', 'Reembolso'), ('adjustment', 'Ajuste Manual')], max_length=20, verbose_name='tipo')),
                ('amount', models.IntegerField(help_text='Positivo=crédito, Negativo=débito', verbose_name='quantidade')),
                ('balance_before', models.IntegerField(verbose_name='saldo anterior')),
                ('balance_after', models.IntegerField(verbose_name='saldo após')),
                ('description', models.TextField(verbose_name='descrição')),
                ('metadata', models.JSONField(default=dict, help_text='Tokens usados, modelo, conversation_id, etc', verbose_name='metadados')),
                ('payment_id', models.CharField(blank=True, help_text='Stripe/MercadoPago payment ID', max_length=255, verbose_name='ID pagamento')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_transactions', to='companies.company')),
                ('conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_insights.aiconversation')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_insights.aimessage')),
            ],
            options={
                'verbose_name': 'Credit Transaction',
                'verbose_name_plural': 'Credit Transactions',
                'db_table': 'ai_credit_transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='aiconversation',
            index=models.Index(fields=['company', 'status', '-updated_at'], name='ai_conversa_company_8067a7_idx'),
        ),
        migrations.AddIndex(
            model_name='aiconversation',
            index=models.Index(fields=['user', '-updated_at'], name='ai_conversa_user_id_0309df_idx'),
        ),
        migrations.AddIndex(
            model_name='aimessage',
            index=models.Index(fields=['conversation', 'created_at'], name='ai_messages_convers_15163f_idx'),
        ),
        migrations.AddIndex(
            model_name='aiinsight',
            index=models.Index(fields=['company', 'status', '-created_at'], name='ai_insights_company_65a941_idx'),
        ),
        migrations.AddIndex(
            model_name='aiinsight',
            index=models.Index(fields=['type', 'priority', '-created_at'], name='ai_insights_type_7006cf_idx'),
        ),
        migrations.AddIndex(
            model_name='aiinsight',
            index=models.Index(fields=['status', 'expires_at'], name='ai_insights_status_887b55_idx'),
        ),
        migrations.AddIndex(
            model_name='aicredittransaction',
            index=models.Index(fields=['company', '-created_at'], name='ai_credit_t_company_e2a77f_idx'),
        ),
        migrations.AddIndex(
            model_name='aicredittransaction',
            index=models.Index(fields=['type', 'created_at'], name='ai_credit_t_type_b25369_idx'),
        ),
    ]
