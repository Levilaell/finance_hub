# Generated by Django 5.1.6 on 2025-07-29 17:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='plan name')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
                ('plan_type', models.CharField(choices=[('starter', 'Inicial'), ('professional', 'Profissional'), ('enterprise', 'Empresarial')], max_length=20, verbose_name='plan type')),
                ('trial_days', models.IntegerField(default=14)),
                ('stripe_price_id_monthly', models.CharField(blank=True, help_text='price_xxx do Stripe para cobrança mensal', max_length=255, verbose_name='Stripe monthly price ID')),
                ('stripe_price_id_yearly', models.CharField(blank=True, help_text='price_xxx do Stripe para cobrança anual', max_length=255, verbose_name='Stripe yearly price ID')),
                ('mercadopago_plan_id', models.CharField(blank=True, max_length=255, verbose_name='MercadoPago plan ID')),
                ('price_monthly', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='monthly price')),
                ('price_yearly', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='yearly price')),
                ('max_transactions', models.IntegerField(default=500, verbose_name='max transactions per month')),
                ('max_bank_accounts', models.IntegerField(default=1, verbose_name='max bank accounts')),
                ('has_ai_categorization', models.BooleanField(default=True, verbose_name='AI categorization')),
                ('enable_ai_insights', models.BooleanField(default=True, verbose_name='AI insights')),
                ('enable_ai_reports', models.BooleanField(default=False, verbose_name='AI reports')),
                ('max_ai_requests_per_month', models.IntegerField(default=100, verbose_name='max AI requests per month')),
                ('has_advanced_reports', models.BooleanField(default=False, verbose_name='advanced reports')),
                ('has_api_access', models.BooleanField(default=False, verbose_name='API access')),
                ('has_accountant_access', models.BooleanField(default=False, verbose_name='accountant access')),
                ('has_priority_support', models.BooleanField(default=False, verbose_name='priority support')),
                ('display_order', models.IntegerField(default=0, verbose_name='display order')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
                'db_table': 'subscription_plans',
                'ordering': ['display_order', 'price_monthly'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='company name')),
                ('trade_name', models.CharField(blank=True, max_length=200, verbose_name='trade name')),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True, unique=True, verbose_name='CNPJ')),
                ('company_type', models.CharField(choices=[('mei', 'Microempreendedor Individual'), ('me', 'Microempresa'), ('epp', 'Empresa de Pequeno Porte'), ('ltda', 'Sociedade Limitada'), ('sa', 'Sociedade Anônima'), ('other', 'Outro')], max_length=20, verbose_name='company type')),
                ('business_sector', models.CharField(choices=[('retail', 'Comércio'), ('services', 'Serviços'), ('industry', 'Indústria'), ('construction', 'Construção'), ('agriculture', 'Agricultura'), ('technology', 'Tecnologia'), ('healthcare', 'Saúde'), ('education', 'Educação'), ('food', 'Alimentação'), ('beauty', 'Beleza'), ('automotive', 'Automotivo'), ('real_estate', 'Imobiliário'), ('consulting', 'Consultoria'), ('other', 'Outro')], max_length=50, verbose_name='business sector')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='company email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('address_street', models.CharField(blank=True, max_length=200, verbose_name='street')),
                ('address_number', models.CharField(blank=True, max_length=20, verbose_name='number')),
                ('address_complement', models.CharField(blank=True, max_length=100, verbose_name='complement')),
                ('address_neighborhood', models.CharField(blank=True, max_length=100, verbose_name='neighborhood')),
                ('address_city', models.CharField(blank=True, max_length=100, verbose_name='city')),
                ('address_state', models.CharField(blank=True, max_length=2, verbose_name='state')),
                ('address_zipcode', models.CharField(blank=True, max_length=10, verbose_name='ZIP code')),
                ('monthly_revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='monthly revenue')),
                ('employee_count', models.IntegerField(default=1, verbose_name='employee count')),
                ('subscription_status', models.CharField(choices=[('trial', 'Período de Teste'), ('active', 'Ativa'), ('past_due', 'Em Atraso'), ('cancelled', 'Cancelada'), ('suspended', 'Suspensa'), ('expired', 'Expirada')], default='trial', max_length=20, verbose_name='subscription status')),
                ('billing_cycle', models.CharField(choices=[('monthly', 'Mensal'), ('yearly', 'Anual')], default='monthly', max_length=20, verbose_name='billing cycle')),
                ('trial_ends_at', models.DateTimeField(blank=True, null=True, verbose_name='trial ends at')),
                ('next_billing_date', models.DateField(blank=True, null=True, verbose_name='next billing date')),
                ('subscription_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='subscription ID')),
                ('subscription_start_date', models.DateTimeField(blank=True, null=True, verbose_name='subscription start date')),
                ('subscription_end_date', models.DateTimeField(blank=True, null=True, verbose_name='subscription end date')),
                ('current_month_transactions', models.IntegerField(default=0, verbose_name='current month transactions')),
                ('current_month_ai_requests', models.IntegerField(default=0, verbose_name='current month AI requests')),
                ('last_usage_reset', models.DateTimeField(auto_now_add=True, verbose_name='last usage reset')),
                ('notified_80_percent', models.BooleanField(default=False)),
                ('notified_90_percent', models.BooleanField(default=False)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/', verbose_name='logo')),
                ('primary_color', models.CharField(default='#3B82F6', max_length=7, verbose_name='primary color')),
                ('currency', models.CharField(default='BRL', max_length=3, verbose_name='currency')),
                ('fiscal_year_start', models.CharField(choices=[('01', '01'), ('02', '02'), ('03', '03'), ('04', '04'), ('05', '05'), ('06', '06'), ('07', '07'), ('08', '08'), ('09', '09'), ('10', '10'), ('11', '11'), ('12', '12')], default='01', max_length=2, verbose_name='fiscal year start')),
                ('enable_ai_categorization', models.BooleanField(default=True, verbose_name='enable AI categorization')),
                ('auto_categorize_threshold', models.FloatField(default=0.8, verbose_name='auto categorize threshold')),
                ('enable_notifications', models.BooleanField(default=True, verbose_name='enable notifications')),
                ('enable_email_reports', models.BooleanField(default=True, verbose_name='enable email reports')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company', to=settings.AUTH_USER_MODEL)),
                ('subscription_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='companies', to='companies.subscriptionplan')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'db_table': 'companies',
            },
        ),
        migrations.CreateModel(
            name='BillingDashboardProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Dashboard de Faturamento',
                'verbose_name_plural': 'Dashboard de Faturamento',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('companies.company',),
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('credit_card', 'Cartão de Crédito'), ('debit_card', 'Cartão de Débito'), ('pix', 'PIX'), ('bank_transfer', 'Transferência Bancária')], max_length=20, verbose_name='payment type')),
                ('card_brand', models.CharField(blank=True, choices=[('visa', 'Visa'), ('mastercard', 'Mastercard'), ('amex', 'American Express'), ('elo', 'Elo'), ('dinners', 'Dinners Club'), ('discover', 'Discover')], max_length=20, verbose_name='card brand')),
                ('last_four', models.CharField(blank=True, max_length=4, verbose_name='last four digits')),
                ('exp_month', models.IntegerField(blank=True, null=True, verbose_name='expiry month')),
                ('exp_year', models.IntegerField(blank=True, null=True, verbose_name='expiry year')),
                ('cardholder_name', models.CharField(blank=True, max_length=200, verbose_name='cardholder name')),
                ('stripe_payment_method_id', models.CharField(blank=True, max_length=255, verbose_name='Stripe payment method ID')),
                ('mercadopago_card_id', models.CharField(blank=True, max_length=255, verbose_name='MercadoPago card ID')),
                ('is_default', models.BooleanField(default=False, verbose_name='is default')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to='companies.company')),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
                'db_table': 'payment_methods',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CompanyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Proprietário'), ('admin', 'Administrador'), ('manager', 'Gerente'), ('accountant', 'Contador'), ('viewer', 'Visualizador')], max_length=20, verbose_name='role')),
                ('permissions', models.JSONField(default=dict, verbose_name='permissions')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('invited_at', models.DateTimeField(auto_now_add=True, verbose_name='invited at')),
                ('joined_at', models.DateTimeField(blank=True, null=True, verbose_name='joined at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_users', to='companies.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Company User',
                'verbose_name_plural': 'Company Users',
                'db_table': 'company_users',
                'unique_together': {('company', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ResourceUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField(help_text='First day of the month', verbose_name='month')),
                ('transactions_count', models.IntegerField(default=0, verbose_name='transactions count')),
                ('ai_requests_count', models.IntegerField(default=0, verbose_name='AI requests count')),
                ('reports_generated', models.IntegerField(default=0, verbose_name='reports generated')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_usage', to='companies.company')),
            ],
            options={
                'verbose_name': 'Resource Usage',
                'verbose_name_plural': 'Resource Usage',
                'db_table': 'resource_usage',
                'ordering': ['-month'],
                'unique_together': {('company', 'month')},
            },
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('subscription', 'Assinatura'), ('upgrade', 'Upgrade de Plano'), ('refund', 'Reembolso'), ('adjustment', 'Ajuste')], max_length=20, verbose_name='transaction type')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='amount')),
                ('currency', models.CharField(default='BRL', max_length=3, verbose_name='currency')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('paid', 'Pago'), ('failed', 'Falhou'), ('canceled', 'Cancelado'), ('refunded', 'Reembolsado'), ('partially_refunded', 'Parcialmente Reembolsado')], max_length=20, verbose_name='status')),
                ('description', models.TextField(verbose_name='description')),
                ('stripe_payment_intent_id', models.CharField(blank=True, max_length=255, verbose_name='Stripe payment intent ID')),
                ('stripe_invoice_id', models.CharField(blank=True, max_length=255, verbose_name='Stripe invoice ID')),
                ('mercadopago_payment_id', models.CharField(blank=True, max_length=255, verbose_name='MercadoPago payment ID')),
                ('invoice_number', models.CharField(blank=True, max_length=50, unique=True, verbose_name='invoice number')),
                ('invoice_url', models.URLField(blank=True, verbose_name='invoice URL')),
                ('invoice_pdf_path', models.CharField(blank=True, max_length=500, verbose_name='invoice PDF path')),
                ('transaction_date', models.DateTimeField(verbose_name='transaction date')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='due date')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='paid at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_history', to='companies.company')),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='companies.paymentmethod')),
                ('subscription_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='companies.subscriptionplan')),
            ],
            options={
                'verbose_name': 'Payment History',
                'verbose_name_plural': 'Payment History',
                'db_table': 'payment_history',
                'ordering': ['-transaction_date'],
                'indexes': [models.Index(fields=['company', 'transaction_date'], name='payment_his_company_e9ccab_idx'), models.Index(fields=['company', 'status', 'transaction_date'], name='payment_his_company_441891_idx'), models.Index(fields=['company', 'transaction_type'], name='payment_his_company_2c6f04_idx'), models.Index(fields=['stripe_payment_intent_id'], name='payment_his_stripe__0d3c9d_idx'), models.Index(fields=['stripe_invoice_id'], name='payment_his_stripe__0d6dde_idx'), models.Index(fields=['mercadopago_payment_id'], name='payment_his_mercado_afa45a_idx'), models.Index(fields=['invoice_number'], name='payment_his_invoice_befd3c_idx'), models.Index(fields=['status', 'transaction_date'], name='payment_his_status_ad7ffa_idx'), models.Index(fields=['created_at', 'status'], name='payment_his_created_54f037_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['subscription_plan', 'subscription_status'], name='companies_subscri_f72d81_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['subscription_status', 'trial_ends_at'], name='companies_subscri_c1c1a8_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['next_billing_date', 'subscription_status'], name='companies_next_bi_dfccba_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['last_usage_reset', 'is_active'], name='companies_last_us_3ace5b_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['current_month_transactions', 'subscription_plan'], name='companies_current_5a978d_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['current_month_ai_requests', 'subscription_plan'], name='companies_current_87a2bc_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['cnpj'], name='companies_cnpj_0deb88_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['is_active', 'created_at'], name='companies_is_acti_3ffea8_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['company_type', 'business_sector'], name='companies_company_835af2_idx'),
        ),
    ]
