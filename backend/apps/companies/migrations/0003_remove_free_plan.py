# Generated by Django 5.1.6 on 2025-07-15

from django.db import migrations
from django.utils import timezone
from datetime import timedelta


def remove_free_plan_and_migrate_companies(apps, schema_editor):
    """
    Remove free plan and migrate all companies to trial
    """
    SubscriptionPlan = apps.get_model('companies', 'SubscriptionPlan')
    Company = apps.get_model('companies', 'Company')
    
    # Find free plan
    free_plan = SubscriptionPlan.objects.filter(slug='free').first()
    
    # Find or create starter plan as default
    starter_plan, created = SubscriptionPlan.objects.get_or_create(
        slug='starter',
        defaults={
            'name': 'Starter',
            'plan_type': 'starter',
            'price_monthly': 49,
            'price_yearly': 490,
            'max_transactions': 500,
            'max_bank_accounts': 2,
            'max_users': 3,
            'has_ai_categorization': False,
            'enable_ai_insights': False,
            'enable_ai_reports': False,
            'max_ai_requests_per_month': 0,
            'has_advanced_reports': True,
            'has_api_access': False,
            'has_accountant_access': False,
            'has_priority_support': True,
            'display_order': 1,
            'is_active': True
        }
    )
    
    if free_plan:
        # Migrate all companies with free plan to starter with trial
        companies_to_migrate = Company.objects.filter(subscription_plan=free_plan)
        
        for company in companies_to_migrate:
            # Set to starter plan with trial
            company.subscription_plan = starter_plan
            company.subscription_status = 'trial'
            
            # If company doesn't have trial_ends_at, set it to 14 days from now
            if not company.trial_ends_at:
                company.trial_ends_at = timezone.now() + timedelta(days=14)
            
            company.save()
        
        print(f"Migrated {companies_to_migrate.count()} companies from free to starter trial")
        
        # Delete the free plan
        free_plan.delete()
        print("Removed free plan")
    
    # Also ensure all companies without a plan get starter
    companies_without_plan = Company.objects.filter(subscription_plan__isnull=True)
    for company in companies_without_plan:
        company.subscription_plan = starter_plan
        company.subscription_status = 'trial'
        if not company.trial_ends_at:
            company.trial_ends_at = timezone.now() + timedelta(days=14)
        company.save()
    
    print(f"Assigned starter plan to {companies_without_plan.count()} companies without plan")


def reverse_migration(apps, schema_editor):
    """
    Reverse migration - recreate free plan
    """
    SubscriptionPlan = apps.get_model('companies', 'SubscriptionPlan')
    
    # Recreate free plan
    SubscriptionPlan.objects.create(
        name='Gr√°tis',
        slug='free',
        plan_type='starter',  # Using starter as there's no 'free' type
        price_monthly=0,
        price_yearly=0,
        max_transactions=100,
        max_bank_accounts=1,
        max_users=1,
        has_ai_categorization=False,
        enable_ai_insights=False,
        enable_ai_reports=False,
        max_ai_requests_per_month=0,
        has_advanced_reports=False,
        has_api_access=False,
        has_accountant_access=False,
        has_priority_support=False,
        display_order=0,
        is_active=True
    )


class Migration(migrations.Migration):

    dependencies = [
        ('companies', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(
            remove_free_plan_and_migrate_companies,
            reverse_migration
        ),
    ]