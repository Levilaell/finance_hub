# Generated by Django 5.1.6 on 2025-08-12 01:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(choices=[('account_sync_failed', 'Account Sync Failed'), ('payment_failed', 'Payment Failed'), ('low_balance', 'Low Balance Alert'), ('security_alert', 'Security Alert'), ('account_connected', 'Account Connected'), ('large_transaction', 'Large Transaction'), ('report_ready', 'Report Ready'), ('payment_success', 'Payment Successful'), ('sync_completed', 'Sync Completed')], db_index=True, default='sync_completed', help_text='The event that triggered this notification', max_length=50, verbose_name='event')),
                ('is_critical', models.BooleanField(db_index=True, default=False, help_text='Critical notifications require immediate attention', verbose_name='is critical')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('message', models.TextField(verbose_name='message')),
                ('event_key', models.CharField(blank=True, help_text='Unique key for deduplication (event:id:user)', max_length=255, null=True, unique=True, verbose_name='event key')),
                ('metadata', models.JSONField(default=dict, help_text='Event-specific metadata', verbose_name='metadata')),
                ('action_url', models.URLField(blank=True, help_text='URL for user action', max_length=500, verbose_name='action URL')),
                ('is_read', models.BooleanField(db_index=True, default=False, verbose_name='is read')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='read at')),
                ('delivery_status', models.CharField(choices=[('pending', 'Pending'), ('delivered', 'Delivered'), ('failed', 'Failed')], db_index=True, default='pending', max_length=20, verbose_name='delivery status')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='delivered at')),
                ('retry_count', models.PositiveSmallIntegerField(default=0, verbose_name='retry count')),
                ('last_retry_at', models.DateTimeField(blank=True, null=True, verbose_name='last retry at')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='companies.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['company', 'user', 'is_read', '-created_at'], name='notificatio_company_03e49e_idx'), models.Index(fields=['company', 'user', 'delivery_status'], name='notificatio_company_1bf196_idx'), models.Index(fields=['is_critical', 'is_read', '-created_at'], name='notificatio_is_crit_58c54a_idx'), models.Index(fields=['event', 'created_at'], name='notificatio_event_1deb01_idx')],
                'constraints': [models.UniqueConstraint(fields=('event_key',), name='unique_notification_event_key')],
            },
        ),
    ]
