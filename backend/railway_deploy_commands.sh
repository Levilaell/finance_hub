#!/bin/bash
# RAILWAY DEPLOY COMMANDS - ULTIMATE MIGRATION FIX
# Script para aplicar a corre√ß√£o definitiva no Railway
# Data: 2025-08-23

echo "üöÄ ULTIMATE MIGRATION FIX - RAILWAY DEPLOYMENT"
echo "=============================================="

# Verifica se est√° no diret√≥rio correto
if [ ! -f "manage.py" ]; then
    echo "‚ùå Erro: Execute este script no diret√≥rio backend/"
    exit 1
fi

echo "üìç Diret√≥rio atual: $(pwd)"

# 1. Verifica o status inicial
echo ""
echo "1Ô∏è‚É£ STATUS INICIAL DAS MIGRA√á√ïES"
echo "--------------------------------"
railway run python manage.py showmigrations

# 2. Aplica o SQL fix diretamente
echo ""
echo "2Ô∏è‚É£ APLICANDO ULTIMATE FIX SQL"
echo "------------------------------"

# Op√ß√£o A: Via arquivo SQL
if [ -f "ultimate_migration_fix.sql" ]; then
    echo "üìÅ Aplicando via arquivo SQL..."
    railway run psql $DATABASE_URL -f ultimate_migration_fix.sql
else
    echo "üìù Aplicando via comando direto..."
    
    # SQL inline para caso o arquivo n√£o esteja dispon√≠vel
    railway run psql $DATABASE_URL << 'EOF'
-- ULTIMATE FIX - VERS√ÉO INLINE
DELETE FROM django_migrations WHERE app = 'companies' AND name = '0009_add_early_access';

UPDATE django_migrations 
SET applied = '2025-07-31 02:00:00+00:00'
WHERE app = 'banking' AND name = '0008_delete_consent';

DELETE FROM django_migrations 
WHERE app = 'reports' AND name IN (
    '0002_alter_aianalysis_options_and_more',
    '0003_aianalysistemplate_aianalysis', 
    '0005_fix_inconsistent_history'
);

INSERT INTO django_migrations (app, name, applied) VALUES
('reports', '0002_alter_aianalysis_options_and_more', '2025-08-12 01:00:00+00:00'),
('reports', '0003_aianalysistemplate_aianalysis', '2025-08-12 02:00:00+00:00'),
('reports', '0005_fix_inconsistent_history', '2025-08-12 03:00:00+00:00');

SELECT '‚úÖ Ultimate fix aplicado!' as status;
EOF
fi

# 3. Executa o script Python de valida√ß√£o
echo ""
echo "3Ô∏è‚É£ VALIDA√á√ÉO AUTOM√ÅTICA"
echo "------------------------"
railway run python apply_ultimate_fix.py

# 4. Tenta aplicar migra√ß√µes restantes
echo ""
echo "4Ô∏è‚É£ APLICANDO MIGRA√á√ïES RESTANTES"
echo "---------------------------------"
railway run python manage.py migrate --no-input

# 5. Verifica status final
echo ""
echo "5Ô∏è‚É£ STATUS FINAL"
echo "---------------"
railway run python manage.py showmigrations

# 6. Teste b√°sico de funcionamento
echo ""
echo "6Ô∏è‚É£ TESTE DE FUNCIONAMENTO"
echo "-------------------------"
railway run python -c "
import django
django.setup()
from django.contrib.auth.models import User
from apps.companies.models import Company
print(f'‚úÖ Users: {User.objects.count()}')
print(f'‚úÖ Companies: {Company.objects.count()}')
print('üéØ Sistema funcionando!')
"

echo ""
echo "üéØ DEPLOY CONCLU√çDO!"
echo "==================="
echo ""
echo "üìã CHECKLIST P√ìS-DEPLOY:"
echo "  ‚ñ° Verificar logs de erro"
echo "  ‚ñ° Testar registro de novo usu√°rio" 
echo "  ‚ñ° Testar login existente"
echo "  ‚ñ° Testar conectar conta banc√°ria"
echo "  ‚ñ° Testar gera√ß√£o de relat√≥rios"
echo ""
echo "üí° Se houver problemas, executar:"
echo "   railway logs --follow"