version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: finance_db
    environment:
      POSTGRES_DB: finance_management
      POSTGRES_USER: finance_user
      POSTGRES_PASSWORD: finance_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U finance_user -d finance_management"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: finance_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: finance_backend
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-dev-key-change-in-production
      - DB_NAME=finance_management
      - DB_USER=finance_user
      - DB_PASSWORD=finance_password
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - FIELD_ENCRYPTION_KEY=32-character-base64-encoded-key-here
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,0.0.0.0
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_media:/app/media
      - backend_static:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000
      "

  # Celery Worker
  celery:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: finance_celery
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-dev-key-change-in-production
      - DB_NAME=finance_management
      - DB_USER=finance_user
      - DB_PASSWORD=finance_password
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - FIELD_ENCRYPTION_KEY=32-character-base64-encoded-key-here
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
      - backend
    command: celery -A core worker -l info

  # Celery Beat Scheduler
  celery-beat:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: finance_celery_beat
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-dev-key-change-in-production
      - DB_NAME=finance_management
      - DB_USER=finance_user
      - DB_PASSWORD=finance_password
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - FIELD_ENCRYPTION_KEY=32-character-base64-encoded-key-here
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
      - backend
    command: celery -A core beat -l info

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: finance_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000/ws
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
  backend_media:
  backend_static: