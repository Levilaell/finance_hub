databases:
  - name: finance-db
    region: oregon
    plan: starter
    databaseName: finance_management
    user: finance_user

services:
  # Backend Django
  - type: web
    name: finance-backend
    region: oregon
    plan: starter
    runtime: docker
    dockerfilePath: ./backend/Dockerfile
    rootDir: backend
    envVars:
      - key: DJANGO_SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: "False"
      - key: ALLOWED_HOSTS
        value: ".onrender.com"
      - key: DATABASE_URL
        fromDatabase:
          name: finance-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: finance-redis
          type: redis
          property: connectionString
      - key: CORS_ALLOWED_ORIGINS
        value: "https://finance-frontend.onrender.com"
      - key: DJANGO_SETTINGS_MODULE
        value: "core.settings.production"
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: PORT
        value: "8000"
    buildCommand: |
      pip install -r requirements.txt
      python manage.py collectstatic --noinput
      python manage.py migrate
    startCommand: gunicorn core.wsgi:application --bind 0.0.0.0:$PORT

  # Frontend Next.js
  - type: web
    name: finance-frontend
    region: oregon
    plan: starter
    runtime: docker
    dockerfilePath: ./frontend/Dockerfile
    rootDir: frontend
    envVars:
      - key: NEXT_PUBLIC_API_URL
        value: "https://finance-backend.onrender.com"
      - key: NODE_ENV
        value: "production"
      - key: PORT
        value: "3000"
    buildCommand: npm run build
    startCommand: npm start

  # Redis para Celery
  - type: redis
    name: finance-redis
    region: oregon
    plan: starter
    ipAllowList: []

  # Celery Worker
  - type: worker
    name: finance-celery
    region: oregon
    plan: starter
    runtime: docker
    dockerfilePath: ./backend/Dockerfile
    rootDir: backend
    envVars:
      - key: DJANGO_SECRET_KEY
        sync: false
      - key: DATABASE_URL
        fromDatabase:
          name: finance-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: finance-redis
          type: redis
          property: connectionString
      - key: DJANGO_SETTINGS_MODULE
        value: "core.settings.production"
    startCommand: celery -A core worker -l info

  # Celery Beat
  - type: worker
    name: finance-celery-beat
    region: oregon
    plan: starter
    runtime: docker
    dockerfilePath: ./backend/Dockerfile
    rootDir: backend
    envVars:
      - key: DJANGO_SECRET_KEY
        sync: false
      - key: DATABASE_URL
        fromDatabase:
          name: finance-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: finance-redis
          type: redis
          property: connectionString
      - key: DJANGO_SETTINGS_MODULE
        value: "core.settings.production"
    startCommand: celery -A core beat -l info